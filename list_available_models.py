#!/usr/bin/env python3
"""
Script para listar modelos TTS dispon√≠veis
"""

from TTS.api import TTS

def list_models():
    """Lista todos os modelos TTS dispon√≠veis"""
    print("üîç Listando modelos TTS dispon√≠veis...")
    print("=" * 50)
    
    try:
        # Listar modelos dispon√≠veis
        tts = TTS()
        models = tts.list_models()
        print(f"üìä Total de modelos encontrados: {len(models)}")
        print()
        
        # Agrupar por categoria
        categories = {}
        for model in models:
            parts = model.split('/')
            if len(parts) >= 2:
                category = parts[1]  # pt, multilingual, etc.
                if category not in categories:
                    categories[category] = []
                categories[category].append(model)
            else:
                if 'other' not in categories:
                    categories['other'] = []
                categories['other'].append(model)
        
        # Mostrar por categoria
        for category, model_list in sorted(categories.items()):
            print(f"üìÅ Categoria: {category.upper()}")
            for model in sorted(model_list):
                print(f"  ‚Ä¢ {model}")
            print()
        
        # Verificar modelos espec√≠ficos para portugu√™s
        print("üáµüáπ Modelos espec√≠ficos para portugu√™s:")
        print("-" * 30)
        pt_models = [m for m in models if 'pt' in m.lower()]
        if pt_models:
            for model in sorted(pt_models):
                print(f"  ‚úÖ {model}")
        else:
            print("  ‚ö†Ô∏è  Nenhum modelo espec√≠fico para portugu√™s encontrado")
        
        print()
        
        # Verificar modelos multilingues
        print("üåç Modelos multilingues:")
        print("-" * 25)
        multilingual_models = [m for m in models if 'multilingual' in m.lower()]
        if multilingual_models:
            for model in sorted(multilingual_models):
                print(f"  ‚úÖ {model}")
        else:
            print("  ‚ö†Ô∏è  Nenhum modelo multilingue encontrado")
        
        print()
        
        # Verificar YourTTS especificamente
        print("üéØ YourTTS (para clonagem de voz):")
        print("-" * 35)
        yourtts_models = [m for m in models if 'your_tts' in m.lower()]
        if yourtts_models:
            for model in sorted(yourtts_models):
                print(f"  ‚úÖ {model}")
        else:
            print("  ‚ö†Ô∏è  YourTTS n√£o encontrado")
            
    except Exception as e:
        print(f"‚ùå Erro ao listar modelos: {e}")

if __name__ == "__main__":
    list_models() 